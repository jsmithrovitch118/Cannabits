{
  "contractName": "TokenTimelock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiary_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \\\"advisors get all of their tokens after 1 year\\\".\",\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"returns\":{\"_0\":\"the beneficiary of the tokens.\"}},\"releaseTime()\":{\"returns\":{\"_0\":\"the time when the tokens are released.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being held.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"release()\":{\"notice\":\"Transfers tokens held by timelock to beneficiary.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/joesmithrovitch/Documents/cannabits/contracts/token/ERC20/utils/TokenTimelock.sol\":\"TokenTimelock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"/Users/joesmithrovitch/Documents/cannabits/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/Users/joesmithrovitch/Documents/cannabits/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"/Users/joesmithrovitch/Documents/cannabits/contracts/token/ERC20/utils/TokenTimelock.sol\":{\"keccak256\":\"0x42576e1738b434ce4315eae2ac6f0c20bd448d5dce6f9ec5fe527a0e6aed3be4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01b9c3aff27348c636d0f4b5b2a3877447def2473960a705d87c4b052cfacf36\",\"dweb:/ipfs/QmSzFzQPrq6wHEeaYQttDXmhoRFtsA93gqLhdGQrDGG1SB\"]},\"/Users/joesmithrovitch/Documents/cannabits/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b506040516108a53803806108a583398101604081905261002f9161007a565b4281116100575760405162461bcd60e51b815260040161004e906100bc565b60405180910390fd5b6001600160601b0319606093841b81166080529190921b1660a05260c052610126565b60008060006060848603121561008e578283fd5b83516100998161010e565b60208501519093506100aa8161010e565b80925050604084015190509250925092565b60208082526032908201527f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260408201527165666f72652063757272656e742074696d6560701b606082015260800190565b6001600160a01b038116811461012357600080fd5b50565b60805160601c60a05160601c60c05161074b61015a60003960006101d4015260006098015260006101f8015261074b6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f1461006f578063b91d400114610079578063fc0c546a1461008e575b600080fd5b610059610096565b60405161006691906104b7565b60405180910390f35b6100776100ba565b005b6100816101d2565b60405161006691906106dc565b6100596101f6565b7f000000000000000000000000000000000000000000000000000000000000000090565b6100c26101d2565b4210156100ea5760405162461bcd60e51b81526004016100e190610531565b60405180910390fd5b60006100f46101f6565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161012c91906104b7565b60206040518083038186803b15801561014457600080fd5b505afa158015610158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017c9190610483565b90506000811161019e5760405162461bcd60e51b81526004016100e19061067f565b6101cf6101a9610096565b826101b26101f6565b73ffffffffffffffffffffffffffffffffffffffff16919061021a565b50565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b61029d8363a9059cbb60e01b84846040516024016102399291906104d8565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526102a2565b505050565b6000610304826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661033e9092919063ffffffff16565b80519091501561029d57808060200190518101906103229190610463565b61029d5760405162461bcd60e51b81526004016100e190610622565b606061034d8484600085610357565b90505b9392505050565b6060824710156103795760405162461bcd60e51b81526004016100e19061058e565b61038285610424565b61039e5760405162461bcd60e51b81526004016100e1906105eb565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516103c7919061049b565b60006040518083038185875af1925050503d8060008114610404576040519150601f19603f3d011682016040523d82523d6000602084013e610409565b606091505b509150915061041982828661042a565b979650505050505050565b3b151590565b60608315610439575081610350565b8251156104495782518084602001fd5b8160405162461bcd60e51b81526004016100e191906104fe565b600060208284031215610474578081fd5b81518015158114610350578182fd5b600060208284031215610494578081fd5b5051919050565b600082516104ad8184602087016106e5565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600060208252825180602084015261051d8160408501602087016106e5565b601f01601f19169190910160400192915050565b60208082526032908201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260408201527f65666f72652072656c656173652074696d650000000000000000000000000000606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560408201527f6173650000000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60005b838110156107005781810151838201526020016106e8565b8381111561070f576000848401525b5050505056fea26469706673582212201bd3f5249533a217cd698ff9bce90fa2556943135ec0cc11327a404c6458f6cb64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f1461006f578063b91d400114610079578063fc0c546a1461008e575b600080fd5b610059610096565b60405161006691906104b7565b60405180910390f35b6100776100ba565b005b6100816101d2565b60405161006691906106dc565b6100596101f6565b7f000000000000000000000000000000000000000000000000000000000000000090565b6100c26101d2565b4210156100ea5760405162461bcd60e51b81526004016100e190610531565b60405180910390fd5b60006100f46101f6565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161012c91906104b7565b60206040518083038186803b15801561014457600080fd5b505afa158015610158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017c9190610483565b90506000811161019e5760405162461bcd60e51b81526004016100e19061067f565b6101cf6101a9610096565b826101b26101f6565b73ffffffffffffffffffffffffffffffffffffffff16919061021a565b50565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b61029d8363a9059cbb60e01b84846040516024016102399291906104d8565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526102a2565b505050565b6000610304826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661033e9092919063ffffffff16565b80519091501561029d57808060200190518101906103229190610463565b61029d5760405162461bcd60e51b81526004016100e190610622565b606061034d8484600085610357565b90505b9392505050565b6060824710156103795760405162461bcd60e51b81526004016100e19061058e565b61038285610424565b61039e5760405162461bcd60e51b81526004016100e1906105eb565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516103c7919061049b565b60006040518083038185875af1925050503d8060008114610404576040519150601f19603f3d011682016040523d82523d6000602084013e610409565b606091505b509150915061041982828661042a565b979650505050505050565b3b151590565b60608315610439575081610350565b8251156104495782518084602001fd5b8160405162461bcd60e51b81526004016100e191906104fe565b600060208284031215610474578081fd5b81518015158114610350578182fd5b600060208284031215610494578081fd5b5051919050565b600082516104ad8184602087016106e5565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600060208252825180602084015261051d8160408501602087016106e5565b601f01601f19169190910160400192915050565b60208082526032908201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260408201527f65666f72652072656c656173652074696d650000000000000000000000000000606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560408201527f6173650000000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60005b838110156107005781810151838201526020016106e8565b8381111561070f576000848401525b5050505056fea26469706673582212201bd3f5249533a217cd698ff9bce90fa2556943135ec0cc11327a404c6458f6cb64736f6c63430008000033",
  "immutableReferences": {
    "6551": [
      {
        "length": 32,
        "start": 504
      }
    ],
    "6553": [
      {
        "length": 32,
        "start": 152
      }
    ],
    "6555": [
      {
        "length": 32,
        "start": 468
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1048:167",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:167",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "144:345:167",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "190:26:167",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "199:6:167"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "207:6:167"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "192:6:167"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "192:22:167"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "192:22:167"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "165:7:167"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "174:9:167"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "161:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "161:23:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "186:2:167",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "157:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "157:32:167"
                  },
                  "nodeType": "YulIf",
                  "src": "154:2:167"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "225:29:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "244:9:167"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "238:5:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:16:167"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "229:5:167",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "290:5:167"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "263:26:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "263:33:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "263:33:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "305:15:167",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "315:5:167"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "305:6:167"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "329:40:167",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "354:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "365:2:167",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "350:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "350:18:167"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "344:5:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "344:25:167"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "333:7:167",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "405:7:167"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "378:26:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "378:35:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "378:35:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "422:17:167",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "432:7:167"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "422:6:167"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "448:35:167",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "468:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "479:2:167",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "464:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:18:167"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "458:5:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "458:25:167"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "448:6:167"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$5348t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "94:9:167",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "105:7:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "117:6:167",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "125:6:167",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "133:6:167",
                "type": ""
              }
            ],
            "src": "14:475:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "668:240:167",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "685:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "696:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "678:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "678:21:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "678:21:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "719:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "730:2:167",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "715:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "715:18:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "735:2:167",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "708:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "708:30:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "708:30:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "758:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "769:2:167",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "754:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "754:18:167"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "774:34:167",
                        "type": "",
                        "value": "TokenTimelock: release time is b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "747:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "747:62:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "747:62:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "829:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "840:2:167",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "825:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "825:18:167"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "845:20:167",
                        "type": "",
                        "value": "efore current time"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "818:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "818:48:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "818:48:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "875:27:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "887:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "898:3:167",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "883:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "883:19:167"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "875:4:167"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "645:9:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "659:4:167",
                "type": ""
              }
            ],
            "src": "494:414:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "960:86:167",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:167",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:167",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:167",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:167"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:167"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:167"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "983:5:167"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "994:5:167"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1009:3:167",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1014:1:167",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1005:3:167"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1005:11:167"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1018:1:167",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1001:3:167"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1001:19:167"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "990:3:167"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "990:31:167"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "980:2:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "980:42:167"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "973:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:50:167"
                  },
                  "nodeType": "YulIf",
                  "src": "970:2:167"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "949:5:167",
                "type": ""
              }
            ],
            "src": "913:133:167"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$5348t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"TokenTimelock: release time is b\")\n        mstore(add(headStart, 96), \"efore current time\")\n        tail := add(headStart, 128)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 167,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4461:167",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:167",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:219:167",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:26:167",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:167"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "155:6:167"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:167"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:22:167"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:22:167"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:167"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:167"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:167"
                  },
                  "nodeType": "YulIf",
                  "src": "102:2:167"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "173:29:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "192:9:167"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "186:5:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "186:16:167"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "177:5:167",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "255:26:167",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "264:6:167"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "272:6:167"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "257:6:167"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "257:22:167"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "257:22:167"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "224:5:167"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "245:5:167"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "238:6:167"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "238:13:167"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "231:6:167"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "231:21:167"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "221:2:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "221:32:167"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "214:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "214:40:167"
                  },
                  "nodeType": "YulIf",
                  "src": "211:2:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "290:15:167",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "300:5:167"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "290:6:167"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:167",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:167",
                "type": ""
              }
            ],
            "src": "14:297:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "397:113:167",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "443:26:167",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "452:6:167"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "460:6:167"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "445:6:167"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "445:22:167"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "445:22:167"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "418:7:167"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "427:9:167"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "414:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "414:23:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "439:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "410:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "410:32:167"
                  },
                  "nodeType": "YulIf",
                  "src": "407:2:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "478:26:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "494:9:167"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "488:5:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:16:167"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "478:6:167"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "363:9:167",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "374:7:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "386:6:167",
                "type": ""
              }
            ],
            "src": "316:194:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "652:137:167",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "662:27:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "682:6:167"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "676:5:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "676:13:167"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "666:6:167",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "724:6:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "732:4:167",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "720:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "720:17:167"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "739:3:167"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "744:6:167"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "698:21:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "698:53:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "698:53:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "760:23:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "771:3:167"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "776:6:167"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "767:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:16:167"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "760:3:167"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "628:3:167",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "633:6:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "644:3:167",
                "type": ""
              }
            ],
            "src": "515:274:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "895:125:167",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "905:26:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "917:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "928:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "913:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "913:18:167"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "905:4:167"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "947:9:167"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "962:6:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "970:42:167",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "958:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "958:55:167"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "940:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "940:74:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "940:74:167"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "864:9:167",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "875:6:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "886:4:167",
                "type": ""
              }
            ],
            "src": "794:226:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1154:168:167",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1164:26:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1176:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1187:2:167",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1172:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:18:167"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1164:4:167"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1206:9:167"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1221:6:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1229:42:167",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1217:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1217:55:167"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1199:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1199:74:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1199:74:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1293:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1304:2:167",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1289:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1289:18:167"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1309:6:167"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1282:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1282:34:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1282:34:167"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1115:9:167",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1126:6:167",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1134:6:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1145:4:167",
                "type": ""
              }
            ],
            "src": "1025:297:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1443:125:167",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1453:26:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1465:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1476:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1461:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1461:18:167"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1453:4:167"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1495:9:167"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1510:6:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1518:42:167",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1506:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1506:55:167"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1488:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1488:74:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1488:74:167"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$5348__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1412:9:167",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1423:6:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1434:4:167",
                "type": ""
              }
            ],
            "src": "1327:241:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1694:321:167",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1711:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1722:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1704:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1704:21:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1704:21:167"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1734:27:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1754:6:167"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1748:5:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1748:13:167"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1738:6:167",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1781:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1792:2:167",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1777:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1777:18:167"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1797:6:167"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1770:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1770:34:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1770:34:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1839:6:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1847:2:167",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1835:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1835:15:167"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1856:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1867:2:167",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1852:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:18:167"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1872:6:167"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1813:21:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1813:66:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1813:66:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1888:121:167",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1904:9:167"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1923:6:167"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1931:2:167",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1919:3:167"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1919:15:167"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1936:66:167",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1915:3:167"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1915:88:167"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1900:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1900:104:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2006:2:167",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1896:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1896:113:167"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1888:4:167"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1663:9:167",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1674:6:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1685:4:167",
                "type": ""
              }
            ],
            "src": "1573:442:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2194:240:167",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2211:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2222:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2204:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2204:21:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2204:21:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2245:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2256:2:167",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2241:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2241:18:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2261:2:167",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2234:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2234:30:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2234:30:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2284:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2295:2:167",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2280:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2280:18:167"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2300:34:167",
                        "type": "",
                        "value": "TokenTimelock: current time is b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2273:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2273:62:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2273:62:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2355:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2366:2:167",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2351:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2351:18:167"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2371:20:167",
                        "type": "",
                        "value": "efore release time"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2344:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2344:48:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2344:48:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2401:27:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2413:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2424:3:167",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2409:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2409:19:167"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2401:4:167"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2171:9:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2185:4:167",
                "type": ""
              }
            ],
            "src": "2020:414:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2613:228:167",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2630:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2641:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2623:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2623:21:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2623:21:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2664:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2675:2:167",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2660:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2660:18:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2680:2:167",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2653:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2653:30:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2653:30:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2703:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2714:2:167",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2699:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2699:18:167"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2719:34:167",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2692:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2692:62:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2692:62:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2774:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2785:2:167",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2770:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2770:18:167"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2790:8:167",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2763:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2763:36:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2763:36:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2808:27:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2820:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2831:3:167",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2816:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2816:19:167"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2808:4:167"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2590:9:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2604:4:167",
                "type": ""
              }
            ],
            "src": "2439:402:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3020:179:167",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3037:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3048:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3030:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3030:21:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3030:21:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3071:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3082:2:167",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3067:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3067:18:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3087:2:167",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3060:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3060:30:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3060:30:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3110:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3121:2:167",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3106:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3106:18:167"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3126:31:167",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3099:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3099:59:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3099:59:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3167:26:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3179:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3190:2:167",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3175:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3175:18:167"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3167:4:167"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2997:9:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3011:4:167",
                "type": ""
              }
            ],
            "src": "2846:353:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3378:232:167",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3395:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3406:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3388:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3388:21:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3388:21:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3429:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3440:2:167",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3425:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3425:18:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3445:2:167",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3418:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3418:30:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3418:30:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3468:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3479:2:167",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3464:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3464:18:167"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3484:34:167",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3457:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3457:62:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3457:62:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3539:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3550:2:167",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3535:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3535:18:167"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3555:12:167",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3528:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3528:40:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3528:40:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3577:27:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3589:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3600:3:167",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3585:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3585:19:167"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3577:4:167"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3355:9:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3369:4:167",
                "type": ""
              }
            ],
            "src": "3204:406:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3789:225:167",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3806:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3817:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3799:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3799:21:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3799:21:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3840:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3851:2:167",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3836:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3836:18:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3856:2:167",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3829:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3829:30:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3829:30:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3879:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3890:2:167",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3875:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3875:18:167"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3895:34:167",
                        "type": "",
                        "value": "TokenTimelock: no tokens to rele"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3868:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3868:62:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3868:62:167"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3950:9:167"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3961:2:167",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3946:3:167"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3946:18:167"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3966:5:167",
                        "type": "",
                        "value": "ase"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3939:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3939:33:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3939:33:167"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3981:27:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3993:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4004:3:167",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3989:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3989:19:167"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3981:4:167"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3766:9:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3780:4:167",
                "type": ""
              }
            ],
            "src": "3615:399:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4120:76:167",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4130:26:167",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4142:9:167"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4153:2:167",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4138:3:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4138:18:167"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4130:4:167"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4172:9:167"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4183:6:167"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4165:6:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4165:25:167"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4165:25:167"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4089:9:167",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4100:6:167",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4111:4:167",
                "type": ""
              }
            ],
            "src": "4019:177:167"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4254:205:167",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4264:10:167",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4273:1:167",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4268:1:167",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4333:63:167",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4358:3:167"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4363:1:167"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4354:3:167"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4354:11:167"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "4377:3:167"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4382:1:167"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4373:3:167"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4373:11:167"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4367:5:167"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4367:18:167"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4347:6:167"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4347:39:167"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4347:39:167"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4294:1:167"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4297:6:167"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4291:2:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4291:13:167"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4305:19:167",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4307:15:167",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4316:1:167"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4319:2:167",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4312:3:167"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4312:10:167"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4307:1:167"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4287:3:167",
                    "statements": []
                  },
                  "src": "4283:113:167"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4422:31:167",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4435:3:167"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4440:6:167"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4431:3:167"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4431:16:167"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4449:1:167",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4424:6:167"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4424:27:167"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4424:27:167"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4411:1:167"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4414:6:167"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4408:2:167"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4408:13:167"
                  },
                  "nodeType": "YulIf",
                  "src": "4405:2:167"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4232:3:167",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "4237:3:167",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4242:6:167",
                "type": ""
              }
            ],
            "src": "4201:258:167"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$5348__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"TokenTimelock: current time is b\")\n        mstore(add(headStart, 96), \"efore release time\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"TokenTimelock: no tokens to rele\")\n        mstore(add(headStart, 96), \"ase\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n}",
      "id": 167,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "307:1622:125:-:0;;;642:335;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;801:15;786:12;:30;778:93;;;;-1:-1:-1;;;778:93:125;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;881:15:125;;;;;;;;906:27;;;;;;;943;;307:1622;;14:475:167;;;;186:2;174:9;165:7;161:23;157:32;154:2;;;207:6;199;192:22;154:2;244:9;238:16;263:33;290:5;263:33;:::i;:::-;365:2;350:18;;344:25;315:5;;-1:-1:-1;378:35:167;344:25;378:35;:::i;:::-;432:7;422:17;;;479:2;468:9;464:18;458:25;448:35;;144:345;;;;;:::o;494:414::-;696:2;678:21;;;735:2;715:18;;;708:30;774:34;769:2;754:18;;747:62;-1:-1:-1;;;840:2:167;825:18;;818:48;898:3;883:19;;668:240::o;913:133::-;-1:-1:-1;;;;;990:31:167;;980:42;;970:2;;1036:1;1033;1026:12;970:2;960:86;:::o;:::-;307:1622:125;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "307:1622:125:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1188:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1545:382;;;:::i;:::-;;1361:97;;;:::i;:::-;;;;;;;:::i;1036:84::-;;;:::i;1188:97::-;1266:12;1188:97;:::o;1545:382::-;1670:13;:11;:13::i;:::-;1651:15;:32;;1643:95;;;;-1:-1:-1;;;1643:95:125;;;;;;;:::i;:::-;;;;;;;;;1749:14;1766:7;:5;:7::i;:::-;:17;;;1792:4;1766:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1749:49;;1825:1;1816:6;:10;1808:58;;;;-1:-1:-1;;;1808:58:125;;;;;;;:::i;:::-;1877:43;1898:13;:11;:13::i;:::-;1913:6;1877:7;:5;:7::i;:::-;:20;;;:43;:20;:43::i;:::-;1545:382;:::o;1361:97::-;1439:12;1361:97;:::o;1036:84::-;1107:6;1036:84;:::o;634:175:124:-;716:86;736:5;766:23;;;791:2;795:5;743:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;743:58:124;;;;;;;;;;;;;;;;;;;;;;;;;;;716:19;:86::i;:::-;634:175;;;:::o;3022:751::-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;3467:27;;;;:69;;;;;:::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:124;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:124;;;;;;;:::i;3573:193:142:-;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;;3573:193;;;;;;:::o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;-1:-1:-1;;;4751:81:142;;;;;;;:::i;:::-;4850:18;4861:6;4850:10;:18::i;:::-;4842:60;;;;-1:-1:-1;;;4842:60:142;;;;;;;:::i;:::-;4973:12;4987:23;5014:6;:11;;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:142:o;718:413::-;1078:20;1116:8;;;718:413::o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:142;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:142;;;;;;;;:::i;14:297:167:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;316:194;;439:2;427:9;418:7;414:23;410:32;407:2;;;460:6;452;445:22;407:2;-1:-1:-1;488:16:167;;397:113;-1:-1:-1;397:113:167:o;515:274::-;;682:6;676:13;698:53;744:6;739:3;732:4;724:6;720:17;698:53;:::i;:::-;767:16;;;;;652:137;-1:-1:-1;;652:137:167:o;794:226::-;970:42;958:55;;;;940:74;;928:2;913:18;;895:125::o;1025:297::-;1229:42;1217:55;;;;1199:74;;1304:2;1289:18;;1282:34;1187:2;1172:18;;1154:168::o;1573:442::-;;1722:2;1711:9;1704:21;1754:6;1748:13;1797:6;1792:2;1781:9;1777:18;1770:34;1813:66;1872:6;1867:2;1856:9;1852:18;1847:2;1839:6;1835:15;1813:66;:::i;:::-;1931:2;1919:15;-1:-1:-1;;1915:88:167;1900:104;;;;2006:2;1896:113;;1694:321;-1:-1:-1;;1694:321:167:o;2020:414::-;2222:2;2204:21;;;2261:2;2241:18;;;2234:30;2300:34;2295:2;2280:18;;2273:62;2371:20;2366:2;2351:18;;2344:48;2424:3;2409:19;;2194:240::o;2439:402::-;2641:2;2623:21;;;2680:2;2660:18;;;2653:30;2719:34;2714:2;2699:18;;2692:62;2790:8;2785:2;2770:18;;2763:36;2831:3;2816:19;;2613:228::o;2846:353::-;3048:2;3030:21;;;3087:2;3067:18;;;3060:30;3126:31;3121:2;3106:18;;3099:59;3190:2;3175:18;;3020:179::o;3204:406::-;3406:2;3388:21;;;3445:2;3425:18;;;3418:30;3484:34;3479:2;3464:18;;3457:62;3555:12;3550:2;3535:18;;3528:40;3600:3;3585:19;;3378:232::o;3615:399::-;3817:2;3799:21;;;3856:2;3836:18;;;3829:30;3895:34;3890:2;3875:18;;3868:62;3966:5;3961:2;3946:18;;3939:33;4004:3;3989:19;;3789:225::o;4019:177::-;4165:25;;;4153:2;4138:18;;4120:76::o;4201:258::-;4273:1;4283:113;4297:6;4294:1;4291:13;4283:113;;;4373:11;;;4367:18;4354:11;;;4347:39;4319:2;4312:10;4283:113;;;4414:6;4411:1;4408:13;4405:2;;;4449:1;4440:6;4435:3;4431:16;4424:27;4405:2;;4254:205;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./SafeERC20.sol\";\n\n/**\n * @dev A token holder contract that will allow a beneficiary to extract the\n * tokens after a given release time.\n *\n * Useful for simple vesting schedules like \"advisors get all of their tokens\n * after 1 year\".\n */\ncontract TokenTimelock {\n    using SafeERC20 for IERC20;\n\n    // ERC20 basic token contract being held\n    IERC20 immutable private _token;\n\n    // beneficiary of tokens after they are released\n    address immutable private _beneficiary;\n\n    // timestamp when token release is enabled\n    uint256 immutable private _releaseTime;\n\n    constructor (IERC20 token_, address beneficiary_, uint256 releaseTime_) {\n        // solhint-disable-next-line not-rely-on-time\n        require(releaseTime_ > block.timestamp, \"TokenTimelock: release time is before current time\");\n        _token = token_;\n        _beneficiary = beneficiary_;\n        _releaseTime = releaseTime_;\n    }\n\n    /**\n     * @return the token being held.\n     */\n    function token() public view virtual returns (IERC20) {\n        return _token;\n    }\n\n    /**\n     * @return the beneficiary of the tokens.\n     */\n    function beneficiary() public view virtual returns (address) {\n        return _beneficiary;\n    }\n\n    /**\n     * @return the time when the tokens are released.\n     */\n    function releaseTime() public view virtual returns (uint256) {\n        return _releaseTime;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function release() public virtual {\n        // solhint-disable-next-line not-rely-on-time\n        require(block.timestamp >= releaseTime(), \"TokenTimelock: current time is before release time\");\n\n        uint256 amount = token().balanceOf(address(this));\n        require(amount > 0, \"TokenTimelock: no tokens to release\");\n\n        token().safeTransfer(beneficiary(), amount);\n    }\n}\n",
  "sourcePath": "/Users/joesmithrovitch/Documents/cannabits/contracts/token/ERC20/utils/TokenTimelock.sol",
  "ast": {
    "absolutePath": "/Users/joesmithrovitch/Documents/cannabits/contracts/token/ERC20/utils/TokenTimelock.sol",
    "exportedSymbols": {
      "Address": [
        10058
      ],
      "IERC20": [
        5348
      ],
      "SafeERC20": [
        6540
      ],
      "TokenTimelock": [
        6655
      ]
    },
    "id": 6656,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6542,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:125"
      },
      {
        "absolutePath": "/Users/joesmithrovitch/Documents/cannabits/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 6543,
        "nodeType": "ImportDirective",
        "scope": 6656,
        "sourceUnit": 6541,
        "src": "58:25:125",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6544,
          "nodeType": "StructuredDocumentation",
          "src": "85:221:125",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "id": 6655,
        "linearizedBaseContracts": [
          6655
        ],
        "name": "TokenTimelock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6548,
            "libraryName": {
              "id": 6545,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6540,
              "src": "342:9:125"
            },
            "nodeType": "UsingForDirective",
            "src": "336:27:125",
            "typeName": {
              "id": 6547,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6546,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5348,
                "src": "356:6:125"
              },
              "referencedDeclaration": 5348,
              "src": "356:6:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5348",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 6551,
            "mutability": "immutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 6655,
            "src": "414:31:125",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5348",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 6550,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6549,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5348,
                "src": "414:6:125"
              },
              "referencedDeclaration": 5348,
              "src": "414:6:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5348",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6553,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 6655,
            "src": "505:38:125",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6552,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:125",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6555,
            "mutability": "immutable",
            "name": "_releaseTime",
            "nodeType": "VariableDeclaration",
            "scope": 6655,
            "src": "597:38:125",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6554,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "597:7:125",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6585,
              "nodeType": "Block",
              "src": "714:263:125",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6566,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6562,
                          "src": "786:12:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 6567,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "801:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 6568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "801:15:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "786:30:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 6570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "818:52:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 6565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "778:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:93:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6572,
                  "nodeType": "ExpressionStatement",
                  "src": "778:93:125"
                },
                {
                  "expression": {
                    "id": 6575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6573,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6551,
                      "src": "881:6:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5348",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6574,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6558,
                      "src": "890:6:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5348",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "881:15:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5348",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 6576,
                  "nodeType": "ExpressionStatement",
                  "src": "881:15:125"
                },
                {
                  "expression": {
                    "id": 6579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6577,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6553,
                      "src": "906:12:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6578,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6560,
                      "src": "921:12:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "906:27:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6580,
                  "nodeType": "ExpressionStatement",
                  "src": "906:27:125"
                },
                {
                  "expression": {
                    "id": 6583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6581,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6555,
                      "src": "943:12:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6582,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6562,
                      "src": "958:12:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "943:27:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6584,
                  "nodeType": "ExpressionStatement",
                  "src": "943:27:125"
                }
              ]
            },
            "id": 6586,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6558,
                  "mutability": "mutable",
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "scope": 6586,
                  "src": "655:13:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5348",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 6557,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6556,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5348,
                      "src": "655:6:125"
                    },
                    "referencedDeclaration": 5348,
                    "src": "655:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5348",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6560,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nodeType": "VariableDeclaration",
                  "scope": 6586,
                  "src": "670:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6562,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 6586,
                  "src": "692:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:59:125"
            },
            "returnParameters": {
              "id": 6564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:0:125"
            },
            "scope": 6655,
            "src": "642:335:125",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6595,
              "nodeType": "Block",
              "src": "1090:30:125",
              "statements": [
                {
                  "expression": {
                    "id": 6593,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6551,
                    "src": "1107:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5348",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 6592,
                  "id": 6594,
                  "nodeType": "Return",
                  "src": "1100:13:125"
                }
              ]
            },
            "documentation": {
              "id": 6587,
              "nodeType": "StructuredDocumentation",
              "src": "983:48:125",
              "text": " @return the token being held."
            },
            "functionSelector": "fc0c546a",
            "id": 6596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:2:125"
            },
            "returnParameters": {
              "id": 6592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6591,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6596,
                  "src": "1082:6:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5348",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 6590,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6589,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5348,
                      "src": "1082:6:125"
                    },
                    "referencedDeclaration": 5348,
                    "src": "1082:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5348",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1081:8:125"
            },
            "scope": 6655,
            "src": "1036:84:125",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6604,
              "nodeType": "Block",
              "src": "1249:36:125",
              "statements": [
                {
                  "expression": {
                    "id": 6602,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6553,
                    "src": "1266:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6601,
                  "id": 6603,
                  "nodeType": "Return",
                  "src": "1259:19:125"
                }
              ]
            },
            "documentation": {
              "id": 6597,
              "nodeType": "StructuredDocumentation",
              "src": "1126:57:125",
              "text": " @return the beneficiary of the tokens."
            },
            "functionSelector": "38af3eed",
            "id": 6605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1208:2:125"
            },
            "returnParameters": {
              "id": 6601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6600,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6605,
                  "src": "1240:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:9:125"
            },
            "scope": 6655,
            "src": "1188:97:125",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6613,
              "nodeType": "Block",
              "src": "1422:36:125",
              "statements": [
                {
                  "expression": {
                    "id": 6611,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6555,
                    "src": "1439:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6610,
                  "id": 6612,
                  "nodeType": "Return",
                  "src": "1432:19:125"
                }
              ]
            },
            "documentation": {
              "id": 6606,
              "nodeType": "StructuredDocumentation",
              "src": "1291:65:125",
              "text": " @return the time when the tokens are released."
            },
            "functionSelector": "b91d4001",
            "id": 6614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1381:2:125"
            },
            "returnParameters": {
              "id": 6610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6609,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6614,
                  "src": "1413:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1412:9:125"
            },
            "scope": 6655,
            "src": "1361:97:125",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6653,
              "nodeType": "Block",
              "src": "1579:348:125",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6619,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1651:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 6620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1651:15:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6621,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6614,
                            "src": "1670:11:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 6622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1670:13:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1651:32:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 6624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1685:52:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 6618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1643:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:95:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6626,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:95:125"
                },
                {
                  "assignments": [
                    6628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6628,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 6653,
                      "src": "1749:14:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6627,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1749:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6637,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6634,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1792:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$6655",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$6655",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 6633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1784:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1784:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1784:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6629,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6596,
                          "src": "1766:5:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$5348_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 6630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1766:7:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5348",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5287,
                      "src": "1766:17:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 6636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:32:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1749:49:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6639,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6628,
                          "src": "1816:6:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1825:1:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1816:10:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 6642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1828:37:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 6638,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1808:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:58:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6644,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:58:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6648,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6605,
                          "src": "1898:11:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 6649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1898:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6650,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6628,
                        "src": "1913:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6645,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6596,
                          "src": "1877:5:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$5348_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 6646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1877:7:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5348",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6347,
                      "src": "1877:20:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5348_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5348_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 6651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:43:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6652,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:43:125"
                }
              ]
            },
            "documentation": {
              "id": 6615,
              "nodeType": "StructuredDocumentation",
              "src": "1464:76:125",
              "text": " @notice Transfers tokens held by timelock to beneficiary."
            },
            "functionSelector": "86d1a69f",
            "id": 6654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1561:2:125"
            },
            "returnParameters": {
              "id": 6617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:0:125"
            },
            "scope": 6655,
            "src": "1545:382:125",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 6656,
        "src": "307:1622:125"
      }
    ],
    "src": "33:1897:125"
  },
  "legacyAST": {
    "absolutePath": "/Users/joesmithrovitch/Documents/cannabits/contracts/token/ERC20/utils/TokenTimelock.sol",
    "exportedSymbols": {
      "Address": [
        10058
      ],
      "IERC20": [
        5348
      ],
      "SafeERC20": [
        6540
      ],
      "TokenTimelock": [
        6655
      ]
    },
    "id": 6656,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6542,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:125"
      },
      {
        "absolutePath": "/Users/joesmithrovitch/Documents/cannabits/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 6543,
        "nodeType": "ImportDirective",
        "scope": 6656,
        "sourceUnit": 6541,
        "src": "58:25:125",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6544,
          "nodeType": "StructuredDocumentation",
          "src": "85:221:125",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "id": 6655,
        "linearizedBaseContracts": [
          6655
        ],
        "name": "TokenTimelock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6548,
            "libraryName": {
              "id": 6545,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6540,
              "src": "342:9:125"
            },
            "nodeType": "UsingForDirective",
            "src": "336:27:125",
            "typeName": {
              "id": 6547,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6546,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5348,
                "src": "356:6:125"
              },
              "referencedDeclaration": 5348,
              "src": "356:6:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5348",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 6551,
            "mutability": "immutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 6655,
            "src": "414:31:125",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5348",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 6550,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6549,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5348,
                "src": "414:6:125"
              },
              "referencedDeclaration": 5348,
              "src": "414:6:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5348",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6553,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 6655,
            "src": "505:38:125",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6552,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:125",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6555,
            "mutability": "immutable",
            "name": "_releaseTime",
            "nodeType": "VariableDeclaration",
            "scope": 6655,
            "src": "597:38:125",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6554,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "597:7:125",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6585,
              "nodeType": "Block",
              "src": "714:263:125",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6566,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6562,
                          "src": "786:12:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 6567,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "801:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 6568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "801:15:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "786:30:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 6570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "818:52:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 6565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "778:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:93:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6572,
                  "nodeType": "ExpressionStatement",
                  "src": "778:93:125"
                },
                {
                  "expression": {
                    "id": 6575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6573,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6551,
                      "src": "881:6:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5348",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6574,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6558,
                      "src": "890:6:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5348",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "881:15:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5348",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 6576,
                  "nodeType": "ExpressionStatement",
                  "src": "881:15:125"
                },
                {
                  "expression": {
                    "id": 6579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6577,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6553,
                      "src": "906:12:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6578,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6560,
                      "src": "921:12:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "906:27:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6580,
                  "nodeType": "ExpressionStatement",
                  "src": "906:27:125"
                },
                {
                  "expression": {
                    "id": 6583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6581,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6555,
                      "src": "943:12:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6582,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6562,
                      "src": "958:12:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "943:27:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6584,
                  "nodeType": "ExpressionStatement",
                  "src": "943:27:125"
                }
              ]
            },
            "id": 6586,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6558,
                  "mutability": "mutable",
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "scope": 6586,
                  "src": "655:13:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5348",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 6557,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6556,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5348,
                      "src": "655:6:125"
                    },
                    "referencedDeclaration": 5348,
                    "src": "655:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5348",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6560,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nodeType": "VariableDeclaration",
                  "scope": 6586,
                  "src": "670:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6562,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 6586,
                  "src": "692:20:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:59:125"
            },
            "returnParameters": {
              "id": 6564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:0:125"
            },
            "scope": 6655,
            "src": "642:335:125",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6595,
              "nodeType": "Block",
              "src": "1090:30:125",
              "statements": [
                {
                  "expression": {
                    "id": 6593,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6551,
                    "src": "1107:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5348",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 6592,
                  "id": 6594,
                  "nodeType": "Return",
                  "src": "1100:13:125"
                }
              ]
            },
            "documentation": {
              "id": 6587,
              "nodeType": "StructuredDocumentation",
              "src": "983:48:125",
              "text": " @return the token being held."
            },
            "functionSelector": "fc0c546a",
            "id": 6596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:2:125"
            },
            "returnParameters": {
              "id": 6592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6591,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6596,
                  "src": "1082:6:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5348",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 6590,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6589,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5348,
                      "src": "1082:6:125"
                    },
                    "referencedDeclaration": 5348,
                    "src": "1082:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5348",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1081:8:125"
            },
            "scope": 6655,
            "src": "1036:84:125",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6604,
              "nodeType": "Block",
              "src": "1249:36:125",
              "statements": [
                {
                  "expression": {
                    "id": 6602,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6553,
                    "src": "1266:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6601,
                  "id": 6603,
                  "nodeType": "Return",
                  "src": "1259:19:125"
                }
              ]
            },
            "documentation": {
              "id": 6597,
              "nodeType": "StructuredDocumentation",
              "src": "1126:57:125",
              "text": " @return the beneficiary of the tokens."
            },
            "functionSelector": "38af3eed",
            "id": 6605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1208:2:125"
            },
            "returnParameters": {
              "id": 6601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6600,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6605,
                  "src": "1240:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:9:125"
            },
            "scope": 6655,
            "src": "1188:97:125",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6613,
              "nodeType": "Block",
              "src": "1422:36:125",
              "statements": [
                {
                  "expression": {
                    "id": 6611,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6555,
                    "src": "1439:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6610,
                  "id": 6612,
                  "nodeType": "Return",
                  "src": "1432:19:125"
                }
              ]
            },
            "documentation": {
              "id": 6606,
              "nodeType": "StructuredDocumentation",
              "src": "1291:65:125",
              "text": " @return the time when the tokens are released."
            },
            "functionSelector": "b91d4001",
            "id": 6614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1381:2:125"
            },
            "returnParameters": {
              "id": 6610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6609,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6614,
                  "src": "1413:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1412:9:125"
            },
            "scope": 6655,
            "src": "1361:97:125",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6653,
              "nodeType": "Block",
              "src": "1579:348:125",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6619,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1651:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 6620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1651:15:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6621,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6614,
                            "src": "1670:11:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 6622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1670:13:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1651:32:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 6624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1685:52:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 6618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1643:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:95:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6626,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:95:125"
                },
                {
                  "assignments": [
                    6628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6628,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 6653,
                      "src": "1749:14:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6627,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1749:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6637,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6634,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1792:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$6655",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$6655",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 6633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1784:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1784:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1784:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6629,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6596,
                          "src": "1766:5:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$5348_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 6630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1766:7:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5348",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5287,
                      "src": "1766:17:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 6636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:32:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1749:49:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6639,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6628,
                          "src": "1816:6:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1825:1:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1816:10:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 6642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1828:37:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 6638,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1808:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:58:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6644,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:58:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6648,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6605,
                          "src": "1898:11:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 6649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1898:13:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6650,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6628,
                        "src": "1913:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6645,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6596,
                          "src": "1877:5:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$5348_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 6646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1877:7:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5348",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6347,
                      "src": "1877:20:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5348_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5348_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 6651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:43:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6652,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:43:125"
                }
              ]
            },
            "documentation": {
              "id": 6615,
              "nodeType": "StructuredDocumentation",
              "src": "1464:76:125",
              "text": " @notice Transfers tokens held by timelock to beneficiary."
            },
            "functionSelector": "86d1a69f",
            "id": 6654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1561:2:125"
            },
            "returnParameters": {
              "id": 6617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:0:125"
            },
            "scope": 6655,
            "src": "1545:382:125",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 6656,
        "src": "307:1622:125"
      }
    ],
    "src": "33:1897:125"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-05-11T00:32:50.611Z",
  "devdoc": {
    "details": "A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\".",
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "returns": {
          "_0": "the beneficiary of the tokens."
        }
      },
      "releaseTime()": {
        "returns": {
          "_0": "the time when the tokens are released."
        }
      },
      "token()": {
        "returns": {
          "_0": "the token being held."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "release()": {
        "notice": "Transfers tokens held by timelock to beneficiary."
      }
    },
    "version": 1
  }
}